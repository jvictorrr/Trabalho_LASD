
Projeto_LASD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  000008f0  00000984  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001fe  00800150  00800150  000009d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000138d  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aab  00000000  00000000  00001ed9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000aab  00000000  00000000  00002984  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a4  00000000  00000000  00003430  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000065e  00000000  00000000  000036d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000086e  00000000  00000000  00003d32  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  000045a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
   4:	0c 94 14 02 	jmp	0x428	; 0x428 <__vector_1>
   8:	0c 94 39 02 	jmp	0x472	; 0x472 <__vector_2>
   c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  14:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  38:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__vector_14>
  3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  48:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__vector_18>
  4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
  68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
  e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
  f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
 248:	11 24       	eor	r1, r1
 24a:	1f be       	out	0x3f, r1	; 63
 24c:	cf ef       	ldi	r28, 0xFF	; 255
 24e:	d8 e0       	ldi	r29, 0x08	; 8
 250:	de bf       	out	0x3e, r29	; 62
 252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
 254:	11 e0       	ldi	r17, 0x01	; 1
 256:	a0 e0       	ldi	r26, 0x00	; 0
 258:	b1 e0       	ldi	r27, 0x01	; 1
 25a:	e0 ef       	ldi	r30, 0xF0	; 240
 25c:	f8 e0       	ldi	r31, 0x08	; 8
 25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
 260:	05 90       	lpm	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	a0 35       	cpi	r26, 0x50	; 80
 266:	b1 07       	cpc	r27, r17
 268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
 26a:	23 e0       	ldi	r18, 0x03	; 3
 26c:	a0 e5       	ldi	r26, 0x50	; 80
 26e:	b1 e0       	ldi	r27, 0x01	; 1
 270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
 272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
 274:	ae 34       	cpi	r26, 0x4E	; 78
 276:	b2 07       	cpc	r27, r18
 278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
 27a:	0e 94 a3 02 	call	0x546	; 0x546 <main>
 27e:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <_exit>

00000282 <__bad_interrupt>:
 282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <int2string>:
		valor /=10; //pega o inteiro da divisÃ£o por 10
		disp--;
	}while (valor!=0);
}

void start_game_config(uint8_t dezena, uint8_t unidade){
 286:	ac 01       	movw	r20, r24
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	06 c0       	rjmp	.+12     	; 0x298 <int2string+0x12>
 28c:	fb 01       	movw	r30, r22
 28e:	e8 0f       	add	r30, r24
 290:	f1 1d       	adc	r31, r1
 292:	90 e3       	ldi	r25, 0x30	; 48
 294:	90 83       	st	Z, r25
 296:	8f 5f       	subi	r24, 0xFF	; 255
 298:	82 30       	cpi	r24, 0x02	; 2
 29a:	c0 f3       	brcs	.-16     	; 0x28c <int2string+0x6>
 29c:	fb 01       	movw	r30, r22
 29e:	31 96       	adiw	r30, 0x01	; 1
 2a0:	9a 01       	movw	r18, r20
 2a2:	ad ec       	ldi	r26, 0xCD	; 205
 2a4:	bc ec       	ldi	r27, 0xCC	; 204
 2a6:	0e 94 67 04 	call	0x8ce	; 0x8ce <__umulhisi3>
 2aa:	96 95       	lsr	r25
 2ac:	87 95       	ror	r24
 2ae:	96 95       	lsr	r25
 2b0:	87 95       	ror	r24
 2b2:	96 95       	lsr	r25
 2b4:	87 95       	ror	r24
 2b6:	9c 01       	movw	r18, r24
 2b8:	22 0f       	add	r18, r18
 2ba:	33 1f       	adc	r19, r19
 2bc:	88 0f       	add	r24, r24
 2be:	99 1f       	adc	r25, r25
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	82 0f       	add	r24, r18
 2ca:	93 1f       	adc	r25, r19
 2cc:	9a 01       	movw	r18, r20
 2ce:	28 1b       	sub	r18, r24
 2d0:	39 0b       	sbc	r19, r25
 2d2:	c9 01       	movw	r24, r18
 2d4:	80 5d       	subi	r24, 0xD0	; 208
 2d6:	80 83       	st	Z, r24
 2d8:	9a 01       	movw	r18, r20
 2da:	0e 94 67 04 	call	0x8ce	; 0x8ce <__umulhisi3>
 2de:	ac 01       	movw	r20, r24
 2e0:	56 95       	lsr	r21
 2e2:	47 95       	ror	r20
 2e4:	56 95       	lsr	r21
 2e6:	47 95       	ror	r20
 2e8:	56 95       	lsr	r21
 2ea:	47 95       	ror	r20
 2ec:	31 97       	sbiw	r30, 0x01	; 1
 2ee:	41 15       	cp	r20, r1
 2f0:	51 05       	cpc	r21, r1
 2f2:	b1 f6       	brne	.-84     	; 0x2a0 <int2string+0x1a>
 2f4:	08 95       	ret

000002f6 <game_running_display_init>:
}
void game_running_display_init(){
	// Função responsável por gerenciar o display nokia durante o funcionamento do jogo
	
	// Tela inicial do Jogo
			nokia_lcd_clear(); //Limpa o LCD
 2f6:	0e 94 64 03 	call	0x6c8	; 0x6c8 <nokia_lcd_clear>
			nokia_lcd_set_cursor(0,0);
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
			nokia_lcd_write_string("BUZZ",2); //Escreve um texto do tamanho 2
 302:	62 e0       	ldi	r22, 0x02	; 2
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	91 e0       	ldi	r25, 0x01	; 1
 308:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,15);
 30c:	6f e0       	ldi	r22, 0x0F	; 15
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
			nokia_lcd_write_string("WIRE",2); //Escreve um texto do tamanho 2
 314:	62 e0       	ldi	r22, 0x02	; 2
 316:	85 e0       	ldi	r24, 0x05	; 5
 318:	91 e0       	ldi	r25, 0x01	; 1
 31a:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,30);
 31e:	6e e1       	ldi	r22, 0x1E	; 30
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Ultimate",1); //Escreve um texto do tamanho 2
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	8a e0       	ldi	r24, 0x0A	; 10
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,40);
 330:	68 e2       	ldi	r22, 0x28	; 40
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Countdown",1); //Escreve um texto do tamanho 2
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	83 e1       	ldi	r24, 0x13	; 19
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
			nokia_lcd_render(); 
 342:	0e 94 42 04 	call	0x884	; 0x884 <nokia_lcd_render>
 346:	08 95       	ret

00000348 <game_running_display_config>:
 
}
void game_running_display_config(){
	
				nokia_lcd_clear(); //Limpa o LCD
 348:	0e 94 64 03 	call	0x6c8	; 0x6c8 <nokia_lcd_clear>
				nokia_lcd_set_cursor(0,0);
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
				nokia_lcd_write_string("Configuracao",1);
 354:	61 e0       	ldi	r22, 0x01	; 1
 356:	8d e1       	ldi	r24, 0x1D	; 29
 358:	91 e0       	ldi	r25, 0x01	; 1
 35a:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,20);
 35e:	64 e1       	ldi	r22, 0x14	; 20
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
				nokia_lcd_write_string("1: Facil",1); 
 366:	61 e0       	ldi	r22, 0x01	; 1
 368:	8a e2       	ldi	r24, 0x2A	; 42
 36a:	91 e0       	ldi	r25, 0x01	; 1
 36c:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,30);
 370:	6e e1       	ldi	r22, 0x1E	; 30
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
				nokia_lcd_write_string("2: Normal",1); 
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	83 e3       	ldi	r24, 0x33	; 51
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,40);
 382:	68 e2       	ldi	r22, 0x28	; 40
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
				nokia_lcd_write_string("3: Dificil",1); 			
 38a:	61 e0       	ldi	r22, 0x01	; 1
 38c:	8d e3       	ldi	r24, 0x3D	; 61
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
				nokia_lcd_render();
 394:	0e 94 42 04 	call	0x884	; 0x884 <nokia_lcd_render>
 398:	08 95       	ret

0000039a <game_running_display_countdwown>:
				
}
void game_running_display_countdwown(uint8_t contador){
 39a:	1f 93       	push	r17
 39c:	cf 93       	push	r28
 39e:	df 93       	push	r29
 3a0:	00 d0       	rcall	.+0      	; 0x3a2 <game_running_display_countdwown+0x8>
 3a2:	cd b7       	in	r28, 0x3d	; 61
 3a4:	de b7       	in	r29, 0x3e	; 62
 3a6:	18 2f       	mov	r17, r24
	unsigned char contador_string[tam_vetor];
	
	nokia_lcd_clear(); //Limpa o LCD
 3a8:	0e 94 64 03 	call	0x6c8	; 0x6c8 <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
 3ac:	60 e0       	ldi	r22, 0x00	; 0
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Valendo",1); //Escreve a leitura no buffer do LCD
 3b4:	61 e0       	ldi	r22, 0x01	; 1
 3b6:	88 e4       	ldi	r24, 0x48	; 72
 3b8:	91 e0       	ldi	r25, 0x01	; 1
 3ba:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
	int2string(contador, contador_string);
 3be:	be 01       	movw	r22, r28
 3c0:	6f 5f       	subi	r22, 0xFF	; 255
 3c2:	7f 4f       	sbci	r23, 0xFF	; 255
 3c4:	81 2f       	mov	r24, r17
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 43 01 	call	0x286	; 0x286 <int2string>
	nokia_lcd_set_cursor(0, 30);
 3cc:	6e e1       	ldi	r22, 0x1E	; 30
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	0e 94 3d 04 	call	0x87a	; 0x87a <nokia_lcd_set_cursor>
	nokia_lcd_write_string(contador_string,2); //Escreve a leitura no buffer do LCD
 3d4:	62 e0       	ldi	r22, 0x02	; 2
 3d6:	ce 01       	movw	r24, r28
 3d8:	01 96       	adiw	r24, 0x01	; 1
 3da:	0e 94 2c 04 	call	0x858	; 0x858 <nokia_lcd_write_string>
	nokia_lcd_render(); //Atualiza a tela do display com o conteÃºdo do buffer
 3de:	0e 94 42 04 	call	0x884	; 0x884 <nokia_lcd_render>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3e2:	2f ef       	ldi	r18, 0xFF	; 255
 3e4:	89 e6       	ldi	r24, 0x69	; 105
 3e6:	98 e1       	ldi	r25, 0x18	; 24
 3e8:	21 50       	subi	r18, 0x01	; 1
 3ea:	80 40       	sbci	r24, 0x00	; 0
 3ec:	90 40       	sbci	r25, 0x00	; 0
 3ee:	e1 f7       	brne	.-8      	; 0x3e8 <game_running_display_countdwown+0x4e>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <game_running_display_countdwown+0x58>
 3f2:	00 00       	nop
	_delay_ms(500);
	
}
 3f4:	0f 90       	pop	r0
 3f6:	0f 90       	pop	r0
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	1f 91       	pop	r17
 3fe:	08 95       	ret

00000400 <USART_Transmit>:
}
unsigned char USART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0))); //Espera o dado ser recebido
	return UDR0; //Le o dado recebido e retorna
}
 400:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 404:	95 ff       	sbrs	r25, 5
 406:	fc cf       	rjmp	.-8      	; 0x400 <USART_Transmit>
 408:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 40c:	08 95       	ret

0000040e <USART_Init>:
 40e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 412:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 416:	88 e9       	ldi	r24, 0x98	; 152
 418:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 41c:	8e e0       	ldi	r24, 0x0E	; 14
 41e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 422:	8f ef       	ldi	r24, 0xFF	; 255
 424:	87 b9       	out	0x07, r24	; 7
 426:	08 95       	ret

00000428 <__vector_1>:
ISR(INT0_vect) //Decrementar 10s
{
 428:	1f 92       	push	r1
 42a:	0f 92       	push	r0
 42c:	0f b6       	in	r0, 0x3f	; 63
 42e:	0f 92       	push	r0
 430:	11 24       	eor	r1, r1
 432:	8f 93       	push	r24
 434:	9f 93       	push	r25
	if(dificuldade==1){
 436:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <dificuldade>
 43a:	81 30       	cpi	r24, 0x01	; 1
 43c:	29 f4       	brne	.+10     	; 0x448 <__vector_1+0x20>
	contador-=5;
 43e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <contador>
 442:	95 50       	subi	r25, 0x05	; 5
 444:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <contador>
	}
	if(dificuldade==2){
 448:	82 30       	cpi	r24, 0x02	; 2
 44a:	29 f4       	brne	.+10     	; 0x456 <__vector_1+0x2e>
	contador-=10;
 44c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <contador>
 450:	9a 50       	subi	r25, 0x0A	; 10
 452:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <contador>
	}
	if(dificuldade==3){
 456:	83 30       	cpi	r24, 0x03	; 3
 458:	29 f4       	brne	.+10     	; 0x464 <__vector_1+0x3c>
	contador-=15;
 45a:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <contador>
 45e:	8f 50       	subi	r24, 0x0F	; 15
 460:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <contador>
	}
}
 464:	9f 91       	pop	r25
 466:	8f 91       	pop	r24
 468:	0f 90       	pop	r0
 46a:	0f be       	out	0x3f, r0	; 63
 46c:	0f 90       	pop	r0
 46e:	1f 90       	pop	r1
 470:	18 95       	reti

00000472 <__vector_2>:
ISR(INT1_vect) // Inicio do jogo 
{
 472:	1f 92       	push	r1
 474:	0f 92       	push	r0
 476:	0f b6       	in	r0, 0x3f	; 63
 478:	0f 92       	push	r0
 47a:	11 24       	eor	r1, r1
 47c:	2f 93       	push	r18
 47e:	8f 93       	push	r24
 480:	9f 93       	push	r25
if(start_end==0)
 482:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <start_end>
 486:	81 11       	cpse	r24, r1
 488:	03 c0       	rjmp	.+6      	; 0x490 <__vector_2+0x1e>
	start_end=1;
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <start_end>
 490:	2f ef       	ldi	r18, 0xFF	; 255
 492:	80 e7       	ldi	r24, 0x70	; 112
 494:	92 e0       	ldi	r25, 0x02	; 2
 496:	21 50       	subi	r18, 0x01	; 1
 498:	80 40       	sbci	r24, 0x00	; 0
 49a:	90 40       	sbci	r25, 0x00	; 0
 49c:	e1 f7       	brne	.-8      	; 0x496 <__vector_2+0x24>
 49e:	00 c0       	rjmp	.+0      	; 0x4a0 <__vector_2+0x2e>
 4a0:	00 00       	nop
	_delay_ms(50);
}
 4a2:	9f 91       	pop	r25
 4a4:	8f 91       	pop	r24
 4a6:	2f 91       	pop	r18
 4a8:	0f 90       	pop	r0
 4aa:	0f be       	out	0x3f, r0	; 63
 4ac:	0f 90       	pop	r0
 4ae:	1f 90       	pop	r1
 4b0:	18 95       	reti

000004b2 <__vector_14>:

ISR(TIMER0_COMPA_vect){
 4b2:	1f 92       	push	r1
 4b4:	0f 92       	push	r0
 4b6:	0f b6       	in	r0, 0x3f	; 63
 4b8:	0f 92       	push	r0
 4ba:	11 24       	eor	r1, r1
 4bc:	8f 93       	push	r24
	if(dificuldade!=0){
 4be:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <dificuldade>
 4c2:	88 23       	and	r24, r24
 4c4:	29 f0       	breq	.+10     	; 0x4d0 <__vector_14+0x1e>
	cont++;
 4c6:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <__data_end>
 4ca:	8f 5f       	subi	r24, 0xFF	; 255
 4cc:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
	if(cont==1000){
		contador++;
	}
	}
}
 4d0:	8f 91       	pop	r24
 4d2:	0f 90       	pop	r0
 4d4:	0f be       	out	0x3f, r0	; 63
 4d6:	0f 90       	pop	r0
 4d8:	1f 90       	pop	r1
 4da:	18 95       	reti

000004dc <__vector_18>:
ISR(USART_RX_vect)
{
 4dc:	1f 92       	push	r1
 4de:	0f 92       	push	r0
 4e0:	0f b6       	in	r0, 0x3f	; 63
 4e2:	0f 92       	push	r0
 4e4:	11 24       	eor	r1, r1
 4e6:	2f 93       	push	r18
 4e8:	3f 93       	push	r19
 4ea:	4f 93       	push	r20
 4ec:	5f 93       	push	r21
 4ee:	6f 93       	push	r22
 4f0:	7f 93       	push	r23
 4f2:	8f 93       	push	r24
 4f4:	9f 93       	push	r25
 4f6:	af 93       	push	r26
 4f8:	bf 93       	push	r27
 4fa:	ef 93       	push	r30
 4fc:	ff 93       	push	r31
	char recebido;
	recebido = UDR0;
 4fe:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	if(recebido=='1'){
 502:	81 33       	cpi	r24, 0x31	; 49
 504:	19 f4       	brne	.+6      	; 0x50c <__vector_18+0x30>
	dificuldade=1;
 506:	91 e0       	ldi	r25, 0x01	; 1
 508:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <dificuldade>
	}	
	if(recebido=='2'){
 50c:	82 33       	cpi	r24, 0x32	; 50
 50e:	19 f4       	brne	.+6      	; 0x516 <__vector_18+0x3a>
	dificuldade=2;		
 510:	92 e0       	ldi	r25, 0x02	; 2
 512:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <dificuldade>
	}
	if(recebido=='3'){
 516:	83 33       	cpi	r24, 0x33	; 51
 518:	19 f4       	brne	.+6      	; 0x520 <__vector_18+0x44>
	dificuldade =3;
 51a:	93 e0       	ldi	r25, 0x03	; 3
 51c:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <dificuldade>
	}
	USART_Transmit(recebido);
 520:	0e 94 00 02 	call	0x400	; 0x400 <USART_Transmit>
}
 524:	ff 91       	pop	r31
 526:	ef 91       	pop	r30
 528:	bf 91       	pop	r27
 52a:	af 91       	pop	r26
 52c:	9f 91       	pop	r25
 52e:	8f 91       	pop	r24
 530:	7f 91       	pop	r23
 532:	6f 91       	pop	r22
 534:	5f 91       	pop	r21
 536:	4f 91       	pop	r20
 538:	3f 91       	pop	r19
 53a:	2f 91       	pop	r18
 53c:	0f 90       	pop	r0
 53e:	0f be       	out	0x3f, r0	; 63
 540:	0f 90       	pop	r0
 542:	1f 90       	pop	r1
 544:	18 95       	reti

00000546 <main>:
int main(void)
{
			USART_Init(MYUBRR);
 546:	87 e6       	ldi	r24, 0x67	; 103
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 94 07 02 	call	0x40e	; 0x40e <USART_Init>
		
	// principal / interrupÃ§Ã£o
	DDRD = 0x00;
 54e:	1a b8       	out	0x0a, r1	; 10
	PORTD = 0xff;
 550:	8f ef       	ldi	r24, 0xFF	; 255
 552:	8b b9       	out	0x0b, r24	; 11
	DDRC = 0b11111111;
 554:	87 b9       	out	0x07, r24	; 7
	DDRB = 0b11111111;
 556:	84 b9       	out	0x04, r24	; 4
	
	EICRA = 0b00000011;
 558:	83 e0       	ldi	r24, 0x03	; 3
 55a:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
	EIMSK = 0b00000011;
 55e:	8d bb       	out	0x1d, r24	; 29
	sei();
 560:	78 94       	sei

	// Timer 	
	TCCR0A = 0b00000010;
 562:	92 e0       	ldi	r25, 0x02	; 2
 564:	94 bd       	out	0x24, r25	; 36
	TCCR0B = 0b00000011; // TC0 com prescaler=64
 566:	85 bd       	out	0x25, r24	; 37
	OCR0A = 249; // ajusta o comparador do TC0 contar atÃ© 249
 568:	89 ef       	ldi	r24, 0xF9	; 249
 56a:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = 0b00000010; // Habilita a interrupcao na igualdade com OCR0A, sendo a cada 1ms = (64*(249+1)/16Mhz
 56c:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	DDRD = (1<<6);
 570:	80 e4       	ldi	r24, 0x40	; 64
 572:	8a b9       	out	0x0a, r24	; 10
	
	  nokia_lcd_init(); //Inicia o LCD
 574:	0e 94 0c 03 	call	0x618	; 0x618 <nokia_lcd_init>
	  nokia_lcd_clear(); //Limpa o LCD
 578:	0e 94 64 03 	call	0x6c8	; 0x6c8 <nokia_lcd_clear>
	  nokia_lcd_render(); 
 57c:	0e 94 42 04 	call	0x884	; 0x884 <nokia_lcd_render>
	  
	
		while (1)
	    {
		if(dificuldade==0){
 580:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <dificuldade>
 584:	81 11       	cpse	r24, r1
 586:	0c c0       	rjmp	.+24     	; 0x5a0 <main+0x5a>
		if(start_end==0){
 588:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <start_end>
 58c:	81 11       	cpse	r24, r1
 58e:	03 c0       	rjmp	.+6      	; 0x596 <main+0x50>
		game_running_display_init();
 590:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <game_running_display_init>
 594:	f5 cf       	rjmp	.-22     	; 0x580 <main+0x3a>
		}else if(start_end==1){
 596:	81 30       	cpi	r24, 0x01	; 1
 598:	99 f7       	brne	.-26     	; 0x580 <main+0x3a>
		game_running_display_config();
 59a:	0e 94 a4 01 	call	0x348	; 0x348 <game_running_display_config>
 59e:	f0 cf       	rjmp	.-32     	; 0x580 <main+0x3a>
		}
		}else{
			game_running_display_countdwown(contador);
 5a0:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <contador>
 5a4:	0e 94 cd 01 	call	0x39a	; 0x39a <game_running_display_countdwown>
 5a8:	eb cf       	rjmp	.-42     	; 0x580 <main+0x3a>

000005aa <write>:
 5aa:	95 b1       	in	r25, 0x05	; 5
 5ac:	9d 7f       	andi	r25, 0xFD	; 253
 5ae:	95 b9       	out	0x05, r25	; 5
 5b0:	66 23       	and	r22, r22
 5b2:	29 f0       	breq	.+10     	; 0x5be <write+0x14>
 5b4:	95 b1       	in	r25, 0x05	; 5
 5b6:	98 60       	ori	r25, 0x08	; 8
 5b8:	95 b9       	out	0x05, r25	; 5
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	1f c0       	rjmp	.+62     	; 0x5fc <write+0x52>
 5be:	95 b1       	in	r25, 0x05	; 5
 5c0:	97 7f       	andi	r25, 0xF7	; 247
 5c2:	95 b9       	out	0x05, r25	; 5
 5c4:	fa cf       	rjmp	.-12     	; 0x5ba <write+0x10>
 5c6:	47 e0       	ldi	r20, 0x07	; 7
 5c8:	50 e0       	ldi	r21, 0x00	; 0
 5ca:	49 1b       	sub	r20, r25
 5cc:	51 09       	sbc	r21, r1
 5ce:	28 2f       	mov	r18, r24
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <write+0x2e>
 5d4:	35 95       	asr	r19
 5d6:	27 95       	ror	r18
 5d8:	4a 95       	dec	r20
 5da:	e2 f7       	brpl	.-8      	; 0x5d4 <write+0x2a>
 5dc:	20 ff       	sbrs	r18, 0
 5de:	04 c0       	rjmp	.+8      	; 0x5e8 <write+0x3e>
 5e0:	25 b1       	in	r18, 0x05	; 5
 5e2:	20 61       	ori	r18, 0x10	; 16
 5e4:	25 b9       	out	0x05, r18	; 5
 5e6:	03 c0       	rjmp	.+6      	; 0x5ee <write+0x44>
 5e8:	25 b1       	in	r18, 0x05	; 5
 5ea:	2f 7e       	andi	r18, 0xEF	; 239
 5ec:	25 b9       	out	0x05, r18	; 5
 5ee:	25 b1       	in	r18, 0x05	; 5
 5f0:	20 62       	ori	r18, 0x20	; 32
 5f2:	25 b9       	out	0x05, r18	; 5
 5f4:	25 b1       	in	r18, 0x05	; 5
 5f6:	2f 7d       	andi	r18, 0xDF	; 223
 5f8:	25 b9       	out	0x05, r18	; 5
 5fa:	9f 5f       	subi	r25, 0xFF	; 255
 5fc:	98 30       	cpi	r25, 0x08	; 8
 5fe:	18 f3       	brcs	.-58     	; 0x5c6 <write+0x1c>
 600:	85 b1       	in	r24, 0x05	; 5
 602:	82 60       	ori	r24, 0x02	; 2
 604:	85 b9       	out	0x05, r24	; 5
 606:	08 95       	ret

00000608 <write_cmd>:
 608:	60 e0       	ldi	r22, 0x00	; 0
 60a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <write>
 60e:	08 95       	ret

00000610 <write_data>:
 610:	61 e0       	ldi	r22, 0x01	; 1
 612:	0e 94 d5 02 	call	0x5aa	; 0x5aa <write>
 616:	08 95       	ret

00000618 <nokia_lcd_init>:
 618:	cf 93       	push	r28
 61a:	df 93       	push	r29
 61c:	84 b1       	in	r24, 0x04	; 4
 61e:	82 60       	ori	r24, 0x02	; 2
 620:	84 b9       	out	0x04, r24	; 4
 622:	84 b1       	in	r24, 0x04	; 4
 624:	84 60       	ori	r24, 0x04	; 4
 626:	84 b9       	out	0x04, r24	; 4
 628:	84 b1       	in	r24, 0x04	; 4
 62a:	88 60       	ori	r24, 0x08	; 8
 62c:	84 b9       	out	0x04, r24	; 4
 62e:	84 b1       	in	r24, 0x04	; 4
 630:	80 61       	ori	r24, 0x10	; 16
 632:	84 b9       	out	0x04, r24	; 4
 634:	84 b1       	in	r24, 0x04	; 4
 636:	80 62       	ori	r24, 0x20	; 32
 638:	84 b9       	out	0x04, r24	; 4
 63a:	85 b1       	in	r24, 0x05	; 5
 63c:	84 60       	ori	r24, 0x04	; 4
 63e:	85 b9       	out	0x05, r24	; 5
 640:	85 b1       	in	r24, 0x05	; 5
 642:	82 60       	ori	r24, 0x02	; 2
 644:	85 b9       	out	0x05, r24	; 5
 646:	83 ec       	ldi	r24, 0xC3	; 195
 648:	99 e0       	ldi	r25, 0x09	; 9
 64a:	01 97       	sbiw	r24, 0x01	; 1
 64c:	f1 f7       	brne	.-4      	; 0x64a <nokia_lcd_init+0x32>
 64e:	00 c0       	rjmp	.+0      	; 0x650 <nokia_lcd_init+0x38>
 650:	00 00       	nop
 652:	85 b1       	in	r24, 0x05	; 5
 654:	8b 7f       	andi	r24, 0xFB	; 251
 656:	85 b9       	out	0x05, r24	; 5
 658:	8b e5       	ldi	r24, 0x5B	; 91
 65a:	94 e4       	ldi	r25, 0x44	; 68
 65c:	01 97       	sbiw	r24, 0x01	; 1
 65e:	f1 f7       	brne	.-4      	; 0x65c <nokia_lcd_init+0x44>
 660:	00 c0       	rjmp	.+0      	; 0x662 <nokia_lcd_init+0x4a>
 662:	00 00       	nop
 664:	85 b1       	in	r24, 0x05	; 5
 666:	84 60       	ori	r24, 0x04	; 4
 668:	85 b9       	out	0x05, r24	; 5
 66a:	85 b1       	in	r24, 0x05	; 5
 66c:	8d 7f       	andi	r24, 0xFD	; 253
 66e:	85 b9       	out	0x05, r24	; 5
 670:	81 e2       	ldi	r24, 0x21	; 33
 672:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 676:	83 e1       	ldi	r24, 0x13	; 19
 678:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 67c:	86 e0       	ldi	r24, 0x06	; 6
 67e:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 682:	82 ec       	ldi	r24, 0xC2	; 194
 684:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 688:	80 e2       	ldi	r24, 0x20	; 32
 68a:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 68e:	89 e0       	ldi	r24, 0x09	; 9
 690:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 694:	80 e8       	ldi	r24, 0x80	; 128
 696:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 69a:	80 e4       	ldi	r24, 0x40	; 64
 69c:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 6a0:	c0 e0       	ldi	r28, 0x00	; 0
 6a2:	d0 e0       	ldi	r29, 0x00	; 0
 6a4:	04 c0       	rjmp	.+8      	; 0x6ae <nokia_lcd_init+0x96>
 6a6:	80 e0       	ldi	r24, 0x00	; 0
 6a8:	0e 94 08 03 	call	0x610	; 0x610 <write_data>
 6ac:	21 96       	adiw	r28, 0x01	; 1
 6ae:	c8 3f       	cpi	r28, 0xF8	; 248
 6b0:	91 e0       	ldi	r25, 0x01	; 1
 6b2:	d9 07       	cpc	r29, r25
 6b4:	c0 f3       	brcs	.-16     	; 0x6a6 <nokia_lcd_init+0x8e>
 6b6:	88 e0       	ldi	r24, 0x08	; 8
 6b8:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 6bc:	8c e0       	ldi	r24, 0x0C	; 12
 6be:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 6c2:	df 91       	pop	r29
 6c4:	cf 91       	pop	r28
 6c6:	08 95       	ret

000006c8 <nokia_lcd_clear>:
 6c8:	80 e8       	ldi	r24, 0x80	; 128
 6ca:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 6ce:	80 e4       	ldi	r24, 0x40	; 64
 6d0:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 6d4:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <nokia_lcd+0x1f8>
 6d8:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <nokia_lcd+0x1f9>
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	05 c0       	rjmp	.+10     	; 0x6ec <nokia_lcd_clear+0x24>
 6e2:	fc 01       	movw	r30, r24
 6e4:	ec 5a       	subi	r30, 0xAC	; 172
 6e6:	fe 4f       	sbci	r31, 0xFE	; 254
 6e8:	10 82       	st	Z, r1
 6ea:	01 96       	adiw	r24, 0x01	; 1
 6ec:	88 3f       	cpi	r24, 0xF8	; 248
 6ee:	21 e0       	ldi	r18, 0x01	; 1
 6f0:	92 07       	cpc	r25, r18
 6f2:	b8 f3       	brcs	.-18     	; 0x6e2 <nokia_lcd_clear+0x1a>
 6f4:	08 95       	ret

000006f6 <nokia_lcd_set_pixel>:
 6f6:	26 2f       	mov	r18, r22
 6f8:	26 95       	lsr	r18
 6fa:	26 95       	lsr	r18
 6fc:	26 95       	lsr	r18
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	34 e5       	ldi	r19, 0x54	; 84
 702:	23 9f       	mul	r18, r19
 704:	80 0d       	add	r24, r0
 706:	91 1d       	adc	r25, r1
 708:	11 24       	eor	r1, r1
 70a:	44 23       	and	r20, r20
 70c:	79 f0       	breq	.+30     	; 0x72c <nokia_lcd_set_pixel+0x36>
 70e:	67 70       	andi	r22, 0x07	; 7
 710:	21 e0       	ldi	r18, 0x01	; 1
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	02 c0       	rjmp	.+4      	; 0x71a <nokia_lcd_set_pixel+0x24>
 716:	22 0f       	add	r18, r18
 718:	33 1f       	adc	r19, r19
 71a:	6a 95       	dec	r22
 71c:	e2 f7       	brpl	.-8      	; 0x716 <nokia_lcd_set_pixel+0x20>
 71e:	fc 01       	movw	r30, r24
 720:	ec 5a       	subi	r30, 0xAC	; 172
 722:	fe 4f       	sbci	r31, 0xFE	; 254
 724:	80 81       	ld	r24, Z
 726:	28 2b       	or	r18, r24
 728:	20 83       	st	Z, r18
 72a:	08 95       	ret
 72c:	67 70       	andi	r22, 0x07	; 7
 72e:	21 e0       	ldi	r18, 0x01	; 1
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	02 c0       	rjmp	.+4      	; 0x738 <nokia_lcd_set_pixel+0x42>
 734:	22 0f       	add	r18, r18
 736:	33 1f       	adc	r19, r19
 738:	6a 95       	dec	r22
 73a:	e2 f7       	brpl	.-8      	; 0x734 <nokia_lcd_set_pixel+0x3e>
 73c:	fc 01       	movw	r30, r24
 73e:	ec 5a       	subi	r30, 0xAC	; 172
 740:	fe 4f       	sbci	r31, 0xFE	; 254
 742:	20 95       	com	r18
 744:	80 81       	ld	r24, Z
 746:	28 23       	and	r18, r24
 748:	20 83       	st	Z, r18
 74a:	08 95       	ret

0000074c <nokia_lcd_write_char>:
 74c:	ef 92       	push	r14
 74e:	ff 92       	push	r15
 750:	0f 93       	push	r16
 752:	1f 93       	push	r17
 754:	cf 93       	push	r28
 756:	df 93       	push	r29
 758:	e8 2e       	mov	r14, r24
 75a:	f6 2e       	mov	r15, r22
 75c:	00 e0       	ldi	r16, 0x00	; 0
 75e:	45 c0       	rjmp	.+138    	; 0x7ea <nokia_lcd_write_char+0x9e>
 760:	2e 2d       	mov	r18, r14
 762:	30 e0       	ldi	r19, 0x00	; 0
 764:	20 52       	subi	r18, 0x20	; 32
 766:	31 09       	sbc	r19, r1
 768:	80 2f       	mov	r24, r16
 76a:	6f 2d       	mov	r22, r15
 76c:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__udivmodqi4>
 770:	f9 01       	movw	r30, r18
 772:	ee 0f       	add	r30, r30
 774:	ff 1f       	adc	r31, r31
 776:	ee 0f       	add	r30, r30
 778:	ff 1f       	adc	r31, r31
 77a:	e2 0f       	add	r30, r18
 77c:	f3 1f       	adc	r31, r19
 77e:	e8 0f       	add	r30, r24
 780:	f1 1d       	adc	r31, r1
 782:	e8 59       	subi	r30, 0x98	; 152
 784:	ff 4f       	sbci	r31, 0xFF	; 255
 786:	e4 91       	lpm	r30, Z
 788:	81 2f       	mov	r24, r17
 78a:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__udivmodqi4>
 78e:	f0 e0       	ldi	r31, 0x00	; 0
 790:	02 c0       	rjmp	.+4      	; 0x796 <nokia_lcd_write_char+0x4a>
 792:	f5 95       	asr	r31
 794:	e7 95       	ror	r30
 796:	8a 95       	dec	r24
 798:	e2 f7       	brpl	.-8      	; 0x792 <nokia_lcd_write_char+0x46>
 79a:	e0 ff       	sbrs	r30, 0
 79c:	0a c0       	rjmp	.+20     	; 0x7b2 <nokia_lcd_write_char+0x66>
 79e:	60 91 4d 03 	lds	r22, 0x034D	; 0x80034d <nokia_lcd+0x1f9>
 7a2:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <nokia_lcd+0x1f8>
 7a6:	61 0f       	add	r22, r17
 7a8:	41 e0       	ldi	r20, 0x01	; 1
 7aa:	80 0f       	add	r24, r16
 7ac:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <nokia_lcd_set_pixel>
 7b0:	09 c0       	rjmp	.+18     	; 0x7c4 <nokia_lcd_write_char+0x78>
 7b2:	60 91 4d 03 	lds	r22, 0x034D	; 0x80034d <nokia_lcd+0x1f9>
 7b6:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <nokia_lcd+0x1f8>
 7ba:	61 0f       	add	r22, r17
 7bc:	40 e0       	ldi	r20, 0x00	; 0
 7be:	80 0f       	add	r24, r16
 7c0:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <nokia_lcd_set_pixel>
 7c4:	1f 5f       	subi	r17, 0xFF	; 255
 7c6:	01 c0       	rjmp	.+2      	; 0x7ca <nokia_lcd_write_char+0x7e>
 7c8:	10 e0       	ldi	r17, 0x00	; 0
 7ca:	21 2f       	mov	r18, r17
 7cc:	30 e0       	ldi	r19, 0x00	; 0
 7ce:	ce 01       	movw	r24, r28
 7d0:	88 0f       	add	r24, r24
 7d2:	99 1f       	adc	r25, r25
 7d4:	88 0f       	add	r24, r24
 7d6:	99 1f       	adc	r25, r25
 7d8:	88 0f       	add	r24, r24
 7da:	99 1f       	adc	r25, r25
 7dc:	8c 1b       	sub	r24, r28
 7de:	9d 0b       	sbc	r25, r29
 7e0:	28 17       	cp	r18, r24
 7e2:	39 07       	cpc	r19, r25
 7e4:	0c f4       	brge	.+2      	; 0x7e8 <nokia_lcd_write_char+0x9c>
 7e6:	bc cf       	rjmp	.-136    	; 0x760 <nokia_lcd_write_char+0x14>
 7e8:	0f 5f       	subi	r16, 0xFF	; 255
 7ea:	20 2f       	mov	r18, r16
 7ec:	30 e0       	ldi	r19, 0x00	; 0
 7ee:	cf 2d       	mov	r28, r15
 7f0:	d0 e0       	ldi	r29, 0x00	; 0
 7f2:	ce 01       	movw	r24, r28
 7f4:	88 0f       	add	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	88 0f       	add	r24, r24
 7fa:	99 1f       	adc	r25, r25
 7fc:	8c 0f       	add	r24, r28
 7fe:	9d 1f       	adc	r25, r29
 800:	28 17       	cp	r18, r24
 802:	39 07       	cpc	r19, r25
 804:	0c f3       	brlt	.-62     	; 0x7c8 <nokia_lcd_write_char+0x7c>
 806:	ec e4       	ldi	r30, 0x4C	; 76
 808:	f3 e0       	ldi	r31, 0x03	; 3
 80a:	8f 2d       	mov	r24, r15
 80c:	88 0f       	add	r24, r24
 80e:	88 0f       	add	r24, r24
 810:	8f 0d       	add	r24, r15
 812:	90 81       	ld	r25, Z
 814:	89 0f       	add	r24, r25
 816:	8f 5f       	subi	r24, 0xFF	; 255
 818:	80 83       	st	Z, r24
 81a:	84 35       	cpi	r24, 0x54	; 84
 81c:	70 f0       	brcs	.+28     	; 0x83a <nokia_lcd_write_char+0xee>
 81e:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <nokia_lcd+0x1f8>
 822:	ed e4       	ldi	r30, 0x4D	; 77
 824:	f3 e0       	ldi	r31, 0x03	; 3
 826:	8f 2d       	mov	r24, r15
 828:	88 0f       	add	r24, r24
 82a:	88 0f       	add	r24, r24
 82c:	88 0f       	add	r24, r24
 82e:	98 2f       	mov	r25, r24
 830:	9f 19       	sub	r25, r15
 832:	80 81       	ld	r24, Z
 834:	89 0f       	add	r24, r25
 836:	8f 5f       	subi	r24, 0xFF	; 255
 838:	80 83       	st	Z, r24
 83a:	80 91 4d 03 	lds	r24, 0x034D	; 0x80034d <nokia_lcd+0x1f9>
 83e:	80 33       	cpi	r24, 0x30	; 48
 840:	20 f0       	brcs	.+8      	; 0x84a <nokia_lcd_write_char+0xfe>
 842:	10 92 4c 03 	sts	0x034C, r1	; 0x80034c <nokia_lcd+0x1f8>
 846:	10 92 4d 03 	sts	0x034D, r1	; 0x80034d <nokia_lcd+0x1f9>
 84a:	df 91       	pop	r29
 84c:	cf 91       	pop	r28
 84e:	1f 91       	pop	r17
 850:	0f 91       	pop	r16
 852:	ff 90       	pop	r15
 854:	ef 90       	pop	r14
 856:	08 95       	ret

00000858 <nokia_lcd_write_string>:
 858:	1f 93       	push	r17
 85a:	cf 93       	push	r28
 85c:	df 93       	push	r29
 85e:	ec 01       	movw	r28, r24
 860:	16 2f       	mov	r17, r22
 862:	04 c0       	rjmp	.+8      	; 0x86c <nokia_lcd_write_string+0x14>
 864:	21 96       	adiw	r28, 0x01	; 1
 866:	61 2f       	mov	r22, r17
 868:	0e 94 a6 03 	call	0x74c	; 0x74c <nokia_lcd_write_char>
 86c:	88 81       	ld	r24, Y
 86e:	81 11       	cpse	r24, r1
 870:	f9 cf       	rjmp	.-14     	; 0x864 <nokia_lcd_write_string+0xc>
 872:	df 91       	pop	r29
 874:	cf 91       	pop	r28
 876:	1f 91       	pop	r17
 878:	08 95       	ret

0000087a <nokia_lcd_set_cursor>:
 87a:	80 93 4c 03 	sts	0x034C, r24	; 0x80034c <nokia_lcd+0x1f8>
 87e:	60 93 4d 03 	sts	0x034D, r22	; 0x80034d <nokia_lcd+0x1f9>
 882:	08 95       	ret

00000884 <nokia_lcd_render>:
 884:	cf 93       	push	r28
 886:	df 93       	push	r29
 888:	80 e8       	ldi	r24, 0x80	; 128
 88a:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 88e:	80 e4       	ldi	r24, 0x40	; 64
 890:	0e 94 04 03 	call	0x608	; 0x608 <write_cmd>
 894:	c0 e0       	ldi	r28, 0x00	; 0
 896:	d0 e0       	ldi	r29, 0x00	; 0
 898:	07 c0       	rjmp	.+14     	; 0x8a8 <nokia_lcd_render+0x24>
 89a:	fe 01       	movw	r30, r28
 89c:	ec 5a       	subi	r30, 0xAC	; 172
 89e:	fe 4f       	sbci	r31, 0xFE	; 254
 8a0:	80 81       	ld	r24, Z
 8a2:	0e 94 08 03 	call	0x610	; 0x610 <write_data>
 8a6:	21 96       	adiw	r28, 0x01	; 1
 8a8:	c8 3f       	cpi	r28, 0xF8	; 248
 8aa:	81 e0       	ldi	r24, 0x01	; 1
 8ac:	d8 07       	cpc	r29, r24
 8ae:	a8 f3       	brcs	.-22     	; 0x89a <nokia_lcd_render+0x16>
 8b0:	df 91       	pop	r29
 8b2:	cf 91       	pop	r28
 8b4:	08 95       	ret

000008b6 <__udivmodqi4>:
 8b6:	99 1b       	sub	r25, r25
 8b8:	79 e0       	ldi	r23, 0x09	; 9
 8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <__udivmodqi4_ep>

000008bc <__udivmodqi4_loop>:
 8bc:	99 1f       	adc	r25, r25
 8be:	96 17       	cp	r25, r22
 8c0:	08 f0       	brcs	.+2      	; 0x8c4 <__udivmodqi4_ep>
 8c2:	96 1b       	sub	r25, r22

000008c4 <__udivmodqi4_ep>:
 8c4:	88 1f       	adc	r24, r24
 8c6:	7a 95       	dec	r23
 8c8:	c9 f7       	brne	.-14     	; 0x8bc <__udivmodqi4_loop>
 8ca:	80 95       	com	r24
 8cc:	08 95       	ret

000008ce <__umulhisi3>:
 8ce:	a2 9f       	mul	r26, r18
 8d0:	b0 01       	movw	r22, r0
 8d2:	b3 9f       	mul	r27, r19
 8d4:	c0 01       	movw	r24, r0
 8d6:	a3 9f       	mul	r26, r19
 8d8:	70 0d       	add	r23, r0
 8da:	81 1d       	adc	r24, r1
 8dc:	11 24       	eor	r1, r1
 8de:	91 1d       	adc	r25, r1
 8e0:	b2 9f       	mul	r27, r18
 8e2:	70 0d       	add	r23, r0
 8e4:	81 1d       	adc	r24, r1
 8e6:	11 24       	eor	r1, r1
 8e8:	91 1d       	adc	r25, r1
 8ea:	08 95       	ret

000008ec <_exit>:
 8ec:	f8 94       	cli

000008ee <__stop_program>:
 8ee:	ff cf       	rjmp	.-2      	; 0x8ee <__stop_program>
