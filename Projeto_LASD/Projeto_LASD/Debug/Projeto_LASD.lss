
Projeto_LASD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  00000a46  00000ada  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000201  00800164  00800164  00000b3e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000174c  00000000  00000000  00000cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad9  00000000  00000000  00002414  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c04  00000000  00000000  00002eed  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c0  00000000  00000000  00003af4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ac  00000000  00000000  00003db4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a05  00000000  00000000  00004460  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00004e65  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
   4:	0c 94 85 02 	jmp	0x50a	; 0x50a <__vector_1>
   8:	0c 94 aa 02 	jmp	0x554	; 0x554 <__vector_2>
   c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  14:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  38:	0c 94 ca 02 	jmp	0x594	; 0x594 <__vector_14>
  3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  48:	0c 94 04 03 	jmp	0x608	; 0x608 <__vector_18>
  4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
  68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
  e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
  f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
 248:	11 24       	eor	r1, r1
 24a:	1f be       	out	0x3f, r1	; 63
 24c:	cf ef       	ldi	r28, 0xFF	; 255
 24e:	d8 e0       	ldi	r29, 0x08	; 8
 250:	de bf       	out	0x3e, r29	; 62
 252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
 254:	11 e0       	ldi	r17, 0x01	; 1
 256:	a0 e0       	ldi	r26, 0x00	; 0
 258:	b1 e0       	ldi	r27, 0x01	; 1
 25a:	e6 e4       	ldi	r30, 0x46	; 70
 25c:	fa e0       	ldi	r31, 0x0A	; 10
 25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
 260:	05 90       	lpm	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	a4 36       	cpi	r26, 0x64	; 100
 266:	b1 07       	cpc	r27, r17
 268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
 26a:	23 e0       	ldi	r18, 0x03	; 3
 26c:	a4 e6       	ldi	r26, 0x64	; 100
 26e:	b1 e0       	ldi	r27, 0x01	; 1
 270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
 272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
 274:	a5 36       	cpi	r26, 0x65	; 101
 276:	b2 07       	cpc	r27, r18
 278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
 27a:	0e 94 3c 03 	call	0x678	; 0x678 <main>
 27e:	0c 94 21 05 	jmp	0xa42	; 0xa42 <_exit>

00000282 <__bad_interrupt>:
 282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <int2string>:
		valor /=10; //pega o inteiro da divisÃ£o por 10
		disp--;
	}while (valor!=0);
}

void start_game_config(uint8_t dezena, uint8_t unidade){
 286:	ac 01       	movw	r20, r24
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	06 c0       	rjmp	.+12     	; 0x298 <int2string+0x12>
 28c:	fb 01       	movw	r30, r22
 28e:	e8 0f       	add	r30, r24
 290:	f1 1d       	adc	r31, r1
 292:	90 e3       	ldi	r25, 0x30	; 48
 294:	90 83       	st	Z, r25
 296:	8f 5f       	subi	r24, 0xFF	; 255
 298:	82 30       	cpi	r24, 0x02	; 2
 29a:	c0 f3       	brcs	.-16     	; 0x28c <int2string+0x6>
 29c:	fb 01       	movw	r30, r22
 29e:	31 96       	adiw	r30, 0x01	; 1
 2a0:	9a 01       	movw	r18, r20
 2a2:	ad ec       	ldi	r26, 0xCD	; 205
 2a4:	bc ec       	ldi	r27, 0xCC	; 204
 2a6:	0e 94 12 05 	call	0xa24	; 0xa24 <__umulhisi3>
 2aa:	96 95       	lsr	r25
 2ac:	87 95       	ror	r24
 2ae:	96 95       	lsr	r25
 2b0:	87 95       	ror	r24
 2b2:	96 95       	lsr	r25
 2b4:	87 95       	ror	r24
 2b6:	9c 01       	movw	r18, r24
 2b8:	22 0f       	add	r18, r18
 2ba:	33 1f       	adc	r19, r19
 2bc:	88 0f       	add	r24, r24
 2be:	99 1f       	adc	r25, r25
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	82 0f       	add	r24, r18
 2ca:	93 1f       	adc	r25, r19
 2cc:	9a 01       	movw	r18, r20
 2ce:	28 1b       	sub	r18, r24
 2d0:	39 0b       	sbc	r19, r25
 2d2:	c9 01       	movw	r24, r18
 2d4:	80 5d       	subi	r24, 0xD0	; 208
 2d6:	80 83       	st	Z, r24
 2d8:	9a 01       	movw	r18, r20
 2da:	0e 94 12 05 	call	0xa24	; 0xa24 <__umulhisi3>
 2de:	ac 01       	movw	r20, r24
 2e0:	56 95       	lsr	r21
 2e2:	47 95       	ror	r20
 2e4:	56 95       	lsr	r21
 2e6:	47 95       	ror	r20
 2e8:	56 95       	lsr	r21
 2ea:	47 95       	ror	r20
 2ec:	31 97       	sbiw	r30, 0x01	; 1
 2ee:	41 15       	cp	r20, r1
 2f0:	51 05       	cpc	r21, r1
 2f2:	b1 f6       	brne	.-84     	; 0x2a0 <int2string+0x1a>
 2f4:	08 95       	ret

000002f6 <game_running_display_init>:
}
void game_running_display_init(){
	// Função responsável por gerenciar o display nokia durante o funcionamento do jogo
	
	// Tela inicial do Jogo
			nokia_lcd_clear(); //Limpa o LCD
 2f6:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
			nokia_lcd_set_cursor(0,0);
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("BUZZ",2); //Escreve um texto do tamanho 2
 302:	62 e0       	ldi	r22, 0x02	; 2
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	91 e0       	ldi	r25, 0x01	; 1
 308:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,15);
 30c:	6f e0       	ldi	r22, 0x0F	; 15
 30e:	80 e0       	ldi	r24, 0x00	; 0
 310:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("WIRE",2); //Escreve um texto do tamanho 2
 314:	62 e0       	ldi	r22, 0x02	; 2
 316:	86 e0       	ldi	r24, 0x06	; 6
 318:	91 e0       	ldi	r25, 0x01	; 1
 31a:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,30);
 31e:	6e e1       	ldi	r22, 0x1E	; 30
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Ultimate",1); //Escreve um texto do tamanho 2
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	8b e0       	ldi	r24, 0x0B	; 11
 32a:	91 e0       	ldi	r25, 0x01	; 1
 32c:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0,40);
 330:	68 e2       	ldi	r22, 0x28	; 40
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("Countdown",1); //Escreve um texto do tamanho 2
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	84 e1       	ldi	r24, 0x14	; 20
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
			nokia_lcd_render(); 
 342:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
 346:	08 95       	ret

00000348 <game_running_display_config>:
 
}
void game_running_display_config(){
	// Tela que configura o nivel de dificuldade do jogo
	
				nokia_lcd_clear(); //Limpa o LCD
 348:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
				nokia_lcd_set_cursor(0,0);
 34c:	60 e0       	ldi	r22, 0x00	; 0
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("Configuracao",1);
 354:	61 e0       	ldi	r22, 0x01	; 1
 356:	8e e1       	ldi	r24, 0x1E	; 30
 358:	91 e0       	ldi	r25, 0x01	; 1
 35a:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,20);
 35e:	64 e1       	ldi	r22, 0x14	; 20
 360:	80 e0       	ldi	r24, 0x00	; 0
 362:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("1: Facil",1); 
 366:	61 e0       	ldi	r22, 0x01	; 1
 368:	8b e2       	ldi	r24, 0x2B	; 43
 36a:	91 e0       	ldi	r25, 0x01	; 1
 36c:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,30);
 370:	6e e1       	ldi	r22, 0x1E	; 30
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("2: Normal",1); 
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	84 e3       	ldi	r24, 0x34	; 52
 37c:	91 e0       	ldi	r25, 0x01	; 1
 37e:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
				nokia_lcd_set_cursor(0,40);
 382:	68 e2       	ldi	r22, 0x28	; 40
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
				nokia_lcd_write_string("3: Dificil",1); 			
 38a:	61 e0       	ldi	r22, 0x01	; 1
 38c:	8e e3       	ldi	r24, 0x3E	; 62
 38e:	91 e0       	ldi	r25, 0x01	; 1
 390:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
				nokia_lcd_render();
 394:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
 398:	08 95       	ret

0000039a <game_running_display_countdwown>:
				
}
void game_running_display_countdwown(uint8_t contador){
 39a:	cf 93       	push	r28
 39c:	c8 2f       	mov	r28, r24
	// Tela que mostra a contagem regressiva durante o jogo
	
	
	nokia_lcd_clear(); //Limpa o LCD
 39e:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
	nokia_lcd_set_cursor(0, 0);
 3a2:	60 e0       	ldi	r22, 0x00	; 0
 3a4:	80 e0       	ldi	r24, 0x00	; 0
 3a6:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
	nokia_lcd_write_string("Valendo",1); //Escreve a leitura no buffer do LCD
 3aa:	61 e0       	ldi	r22, 0x01	; 1
 3ac:	89 e4       	ldi	r24, 0x49	; 73
 3ae:	91 e0       	ldi	r25, 0x01	; 1
 3b0:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
	int2string(contador, contador_string);
 3b4:	63 e6       	ldi	r22, 0x63	; 99
 3b6:	73 e0       	ldi	r23, 0x03	; 3
 3b8:	8c 2f       	mov	r24, r28
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	0e 94 43 01 	call	0x286	; 0x286 <int2string>
	nokia_lcd_set_cursor(0, 30);
 3c0:	6e e1       	ldi	r22, 0x1E	; 30
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
	nokia_lcd_write_string(contador_string,2); //Escreve a leitura no buffer do LCD
 3c8:	62 e0       	ldi	r22, 0x02	; 2
 3ca:	83 e6       	ldi	r24, 0x63	; 99
 3cc:	93 e0       	ldi	r25, 0x03	; 3
 3ce:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
	nokia_lcd_render(); //Atualiza a tela do display com o conteÃºdo do buffer
 3d2:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3d6:	2f ef       	ldi	r18, 0xFF	; 255
 3d8:	81 ee       	ldi	r24, 0xE1	; 225
 3da:	94 e0       	ldi	r25, 0x04	; 4
 3dc:	21 50       	subi	r18, 0x01	; 1
 3de:	80 40       	sbci	r24, 0x00	; 0
 3e0:	90 40       	sbci	r25, 0x00	; 0
 3e2:	e1 f7       	brne	.-8      	; 0x3dc <game_running_display_countdwown+0x42>
 3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <game_running_display_countdwown+0x4c>
 3e6:	00 00       	nop
	_delay_ms(100);
	
}
 3e8:	cf 91       	pop	r28
 3ea:	08 95       	ret

000003ec <game_running_display_transit_start>:
uint8_t game_running_display_transit_start(){
	
					nokia_lcd_clear(); //Limpa o LCD
 3ec:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
					nokia_lcd_set_cursor(30,15);
 3f0:	6f e0       	ldi	r22, 0x0F	; 15
 3f2:	8e e1       	ldi	r24, 0x1E	; 30
 3f4:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
					nokia_lcd_write_string("3",4);
 3f8:	64 e0       	ldi	r22, 0x04	; 4
 3fa:	81 e5       	ldi	r24, 0x51	; 81
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
					nokia_lcd_render();
 402:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
 406:	2f ef       	ldi	r18, 0xFF	; 255
 408:	83 ed       	ldi	r24, 0xD3	; 211
 40a:	90 e3       	ldi	r25, 0x30	; 48
 40c:	21 50       	subi	r18, 0x01	; 1
 40e:	80 40       	sbci	r24, 0x00	; 0
 410:	90 40       	sbci	r25, 0x00	; 0
 412:	e1 f7       	brne	.-8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 414:	00 c0       	rjmp	.+0      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 416:	00 00       	nop
					_delay_ms(1000);
					
					
					nokia_lcd_clear(); //Limpa o LCD
 418:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
					nokia_lcd_set_cursor(30,15);
 41c:	6f e0       	ldi	r22, 0x0F	; 15
 41e:	8e e1       	ldi	r24, 0x1E	; 30
 420:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
					nokia_lcd_write_string("2",4);
 424:	64 e0       	ldi	r22, 0x04	; 4
 426:	83 e5       	ldi	r24, 0x53	; 83
 428:	91 e0       	ldi	r25, 0x01	; 1
 42a:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
					nokia_lcd_render();
 42e:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
 432:	2f ef       	ldi	r18, 0xFF	; 255
 434:	83 ed       	ldi	r24, 0xD3	; 211
 436:	90 e3       	ldi	r25, 0x30	; 48
 438:	21 50       	subi	r18, 0x01	; 1
 43a:	80 40       	sbci	r24, 0x00	; 0
 43c:	90 40       	sbci	r25, 0x00	; 0
 43e:	e1 f7       	brne	.-8      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 440:	00 c0       	rjmp	.+0      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 442:	00 00       	nop
					_delay_ms(1000);
					
					nokia_lcd_clear(); //Limpa o LCD
 444:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
					nokia_lcd_set_cursor(30,15);
 448:	6f e0       	ldi	r22, 0x0F	; 15
 44a:	8e e1       	ldi	r24, 0x1E	; 30
 44c:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
					nokia_lcd_write_string("1",4);
 450:	64 e0       	ldi	r22, 0x04	; 4
 452:	85 e5       	ldi	r24, 0x55	; 85
 454:	91 e0       	ldi	r25, 0x01	; 1
 456:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
					nokia_lcd_render();
 45a:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
 45e:	2f ef       	ldi	r18, 0xFF	; 255
 460:	83 ed       	ldi	r24, 0xD3	; 211
 462:	90 e3       	ldi	r25, 0x30	; 48
 464:	21 50       	subi	r18, 0x01	; 1
 466:	80 40       	sbci	r24, 0x00	; 0
 468:	90 40       	sbci	r25, 0x00	; 0
 46a:	e1 f7       	brne	.-8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 46c:	00 c0       	rjmp	.+0      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 46e:	00 00       	nop
					_delay_ms(1000);
					
					
					nokia_lcd_clear(); //Limpa o LCD
 470:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
					nokia_lcd_set_cursor(15,15);
 474:	6f e0       	ldi	r22, 0x0F	; 15
 476:	8f e0       	ldi	r24, 0x0F	; 15
 478:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
					nokia_lcd_write_string("GO",4);
 47c:	64 e0       	ldi	r22, 0x04	; 4
 47e:	87 e5       	ldi	r24, 0x57	; 87
 480:	91 e0       	ldi	r25, 0x01	; 1
 482:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
					nokia_lcd_render();
 486:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
 48a:	2f ef       	ldi	r18, 0xFF	; 255
 48c:	83 ed       	ldi	r24, 0xD3	; 211
 48e:	90 e3       	ldi	r25, 0x30	; 48
 490:	21 50       	subi	r18, 0x01	; 1
 492:	80 40       	sbci	r24, 0x00	; 0
 494:	90 40       	sbci	r25, 0x00	; 0
 496:	e1 f7       	brne	.-8      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 498:	00 c0       	rjmp	.+0      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 49a:	00 00       	nop
					_delay_ms(1000);					
					
					return 2;
					
}
 49c:	82 e0       	ldi	r24, 0x02	; 2
 49e:	08 95       	ret

000004a0 <game_running_display_game_over>:
uint8_t game_running_display_game_over(){
	// Tela que mostra o fim do jogo
	
			nokia_lcd_clear(); //Limpa o LCD
 4a0:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
			nokia_lcd_set_cursor(10,0);
 4a4:	60 e0       	ldi	r22, 0x00	; 0
 4a6:	8a e0       	ldi	r24, 0x0A	; 10
 4a8:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("GAME",2); //Escreve um texto do tamanho 2
 4ac:	62 e0       	ldi	r22, 0x02	; 2
 4ae:	8a e5       	ldi	r24, 0x5A	; 90
 4b0:	91 e0       	ldi	r25, 0x01	; 1
 4b2:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
			nokia_lcd_set_cursor(10,25);
 4b6:	69 e1       	ldi	r22, 0x19	; 25
 4b8:	8a e0       	ldi	r24, 0x0A	; 10
 4ba:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <nokia_lcd_set_cursor>
			nokia_lcd_write_string("OVER",2); //Escreve um texto do tamanho 2
 4be:	62 e0       	ldi	r22, 0x02	; 2
 4c0:	8f e5       	ldi	r24, 0x5F	; 95
 4c2:	91 e0       	ldi	r25, 0x01	; 1
 4c4:	0e 94 d7 04 	call	0x9ae	; 0x9ae <nokia_lcd_write_string>
			nokia_lcd_render();
 4c8:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
 4cc:	2f ef       	ldi	r18, 0xFF	; 255
 4ce:	83 e2       	ldi	r24, 0x23	; 35
 4d0:	94 ef       	ldi	r25, 0xF4	; 244
 4d2:	21 50       	subi	r18, 0x01	; 1
 4d4:	80 40       	sbci	r24, 0x00	; 0
 4d6:	90 40       	sbci	r25, 0x00	; 0
 4d8:	e1 f7       	brne	.-8      	; 0x4d2 <game_running_display_game_over+0x32>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <game_running_display_game_over+0x3c>
 4dc:	00 00       	nop
			_delay_ms(5000);
			return 0;
}
 4de:	80 e0       	ldi	r24, 0x00	; 0
 4e0:	08 95       	ret

000004e2 <USART_Transmit>:
}
unsigned char USART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0))); //Espera o dado ser recebido
	return UDR0; //Le o dado recebido e retorna
}
 4e2:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 4e6:	95 ff       	sbrs	r25, 5
 4e8:	fc cf       	rjmp	.-8      	; 0x4e2 <USART_Transmit>
 4ea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 4ee:	08 95       	ret

000004f0 <USART_Init>:
 4f0:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 4f4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 4f8:	88 e9       	ldi	r24, 0x98	; 152
 4fa:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 4fe:	8e e0       	ldi	r24, 0x0E	; 14
 500:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 504:	8f ef       	ldi	r24, 0xFF	; 255
 506:	87 b9       	out	0x07, r24	; 7
 508:	08 95       	ret

0000050a <__vector_1>:

ISR(INT0_vect) //Decrementar 10s
{
 50a:	1f 92       	push	r1
 50c:	0f 92       	push	r0
 50e:	0f b6       	in	r0, 0x3f	; 63
 510:	0f 92       	push	r0
 512:	11 24       	eor	r1, r1
 514:	8f 93       	push	r24
 516:	9f 93       	push	r25
	if(dificuldade==1){
 518:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <dificuldade>
 51c:	81 30       	cpi	r24, 0x01	; 1
 51e:	29 f4       	brne	.+10     	; 0x52a <__vector_1+0x20>
		contador-=5;
 520:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
 524:	95 50       	subi	r25, 0x05	; 5
 526:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__data_start>
	}
	if(dificuldade==2){
 52a:	82 30       	cpi	r24, 0x02	; 2
 52c:	29 f4       	brne	.+10     	; 0x538 <__vector_1+0x2e>
		contador-=10;
 52e:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
 532:	9a 50       	subi	r25, 0x0A	; 10
 534:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <__data_start>
	}
	if(dificuldade==3){
 538:	83 30       	cpi	r24, 0x03	; 3
 53a:	29 f4       	brne	.+10     	; 0x546 <__vector_1+0x3c>
		contador-=15;
 53c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 540:	8f 50       	subi	r24, 0x0F	; 15
 542:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	}
}
 546:	9f 91       	pop	r25
 548:	8f 91       	pop	r24
 54a:	0f 90       	pop	r0
 54c:	0f be       	out	0x3f, r0	; 63
 54e:	0f 90       	pop	r0
 550:	1f 90       	pop	r1
 552:	18 95       	reti

00000554 <__vector_2>:
ISR(INT1_vect) // Inicio do jogo
{
 554:	1f 92       	push	r1
 556:	0f 92       	push	r0
 558:	0f b6       	in	r0, 0x3f	; 63
 55a:	0f 92       	push	r0
 55c:	11 24       	eor	r1, r1
 55e:	2f 93       	push	r18
 560:	8f 93       	push	r24
 562:	9f 93       	push	r25
	if(start_end==0)
 564:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <start_end>
 568:	81 11       	cpse	r24, r1
 56a:	03 c0       	rjmp	.+6      	; 0x572 <__vector_2+0x1e>
	start_end=1;
 56c:	81 e0       	ldi	r24, 0x01	; 1
 56e:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <start_end>
 572:	2f ef       	ldi	r18, 0xFF	; 255
 574:	80 e7       	ldi	r24, 0x70	; 112
 576:	92 e0       	ldi	r25, 0x02	; 2
 578:	21 50       	subi	r18, 0x01	; 1
 57a:	80 40       	sbci	r24, 0x00	; 0
 57c:	90 40       	sbci	r25, 0x00	; 0
 57e:	e1 f7       	brne	.-8      	; 0x578 <__vector_2+0x24>
 580:	00 c0       	rjmp	.+0      	; 0x582 <__vector_2+0x2e>
 582:	00 00       	nop
	_delay_ms(50);
}
 584:	9f 91       	pop	r25
 586:	8f 91       	pop	r24
 588:	2f 91       	pop	r18
 58a:	0f 90       	pop	r0
 58c:	0f be       	out	0x3f, r0	; 63
 58e:	0f 90       	pop	r0
 590:	1f 90       	pop	r1
 592:	18 95       	reti

00000594 <__vector_14>:

ISR(TIMER0_COMPA_vect){
 594:	1f 92       	push	r1
 596:	0f 92       	push	r0
 598:	0f b6       	in	r0, 0x3f	; 63
 59a:	0f 92       	push	r0
 59c:	11 24       	eor	r1, r1
 59e:	2f 93       	push	r18
 5a0:	8f 93       	push	r24
 5a2:	9f 93       	push	r25
	
	if(start_count==2){
 5a4:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__data_end>
 5a8:	82 30       	cpi	r24, 0x02	; 2
 5aa:	31 f5       	brne	.+76     	; 0x5f8 <__vector_14+0x64>
		cont++;
 5ac:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <cont>
 5b0:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <cont+0x1>
 5b4:	01 96       	adiw	r24, 0x01	; 1
 5b6:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <cont+0x1>
 5ba:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <cont>
		if(cont==1000){
 5be:	88 3e       	cpi	r24, 0xE8	; 232
 5c0:	93 40       	sbci	r25, 0x03	; 3
 5c2:	d1 f4       	brne	.+52     	; 0x5f8 <__vector_14+0x64>
			contador--;
 5c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 5c8:	81 50       	subi	r24, 0x01	; 1
 5ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			cont=0;
 5ce:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <cont+0x1>
 5d2:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <cont>
			if(contador==0){ // Acaba o jogo
 5d6:	81 11       	cpse	r24, r1
 5d8:	0f c0       	rjmp	.+30     	; 0x5f8 <__vector_14+0x64>
				start_count=3;
 5da:	83 e0       	ldi	r24, 0x03	; 3
 5dc:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end>
				contador=99;
 5e0:	83 e6       	ldi	r24, 0x63	; 99
 5e2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 5e6:	8f ef       	ldi	r24, 0xFF	; 255
 5e8:	91 ee       	ldi	r25, 0xE1	; 225
 5ea:	24 e0       	ldi	r18, 0x04	; 4
 5ec:	81 50       	subi	r24, 0x01	; 1
 5ee:	90 40       	sbci	r25, 0x00	; 0
 5f0:	20 40       	sbci	r18, 0x00	; 0
 5f2:	e1 f7       	brne	.-8      	; 0x5ec <__vector_14+0x58>
 5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <__vector_14+0x62>
 5f6:	00 00       	nop
				_delay_ms(100);
			}
		}
	}
}
 5f8:	9f 91       	pop	r25
 5fa:	8f 91       	pop	r24
 5fc:	2f 91       	pop	r18
 5fe:	0f 90       	pop	r0
 600:	0f be       	out	0x3f, r0	; 63
 602:	0f 90       	pop	r0
 604:	1f 90       	pop	r1
 606:	18 95       	reti

00000608 <__vector_18>:
ISR(USART_RX_vect)
{
 608:	1f 92       	push	r1
 60a:	0f 92       	push	r0
 60c:	0f b6       	in	r0, 0x3f	; 63
 60e:	0f 92       	push	r0
 610:	11 24       	eor	r1, r1
 612:	2f 93       	push	r18
 614:	3f 93       	push	r19
 616:	4f 93       	push	r20
 618:	5f 93       	push	r21
 61a:	6f 93       	push	r22
 61c:	7f 93       	push	r23
 61e:	8f 93       	push	r24
 620:	9f 93       	push	r25
 622:	af 93       	push	r26
 624:	bf 93       	push	r27
 626:	ef 93       	push	r30
 628:	ff 93       	push	r31
	char recebido;
	recebido = UDR0;
 62a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	if(recebido=='1'){
 62e:	81 33       	cpi	r24, 0x31	; 49
 630:	19 f4       	brne	.+6      	; 0x638 <__vector_18+0x30>
		dificuldade=1;
 632:	91 e0       	ldi	r25, 0x01	; 1
 634:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <dificuldade>
	}
	if(recebido=='2'){
 638:	82 33       	cpi	r24, 0x32	; 50
 63a:	19 f4       	brne	.+6      	; 0x642 <__vector_18+0x3a>
		dificuldade=2;
 63c:	92 e0       	ldi	r25, 0x02	; 2
 63e:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <dificuldade>
	}
	if(recebido=='3'){
 642:	83 33       	cpi	r24, 0x33	; 51
 644:	19 f4       	brne	.+6      	; 0x64c <__vector_18+0x44>
		dificuldade =3;
 646:	93 e0       	ldi	r25, 0x03	; 3
 648:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <dificuldade>
	}
	USART_Transmit(recebido);
 64c:	0e 94 71 02 	call	0x4e2	; 0x4e2 <USART_Transmit>
	start_count=1;
 650:	81 e0       	ldi	r24, 0x01	; 1
 652:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end>
}
 656:	ff 91       	pop	r31
 658:	ef 91       	pop	r30
 65a:	bf 91       	pop	r27
 65c:	af 91       	pop	r26
 65e:	9f 91       	pop	r25
 660:	8f 91       	pop	r24
 662:	7f 91       	pop	r23
 664:	6f 91       	pop	r22
 666:	5f 91       	pop	r21
 668:	4f 91       	pop	r20
 66a:	3f 91       	pop	r19
 66c:	2f 91       	pop	r18
 66e:	0f 90       	pop	r0
 670:	0f be       	out	0x3f, r0	; 63
 672:	0f 90       	pop	r0
 674:	1f 90       	pop	r1
 676:	18 95       	reti

00000678 <main>:
int main(void)
{
	USART_Init(MYUBRR);
 678:	87 e6       	ldi	r24, 0x67	; 103
 67a:	90 e0       	ldi	r25, 0x00	; 0
 67c:	0e 94 78 02 	call	0x4f0	; 0x4f0 <USART_Init>
	
	// principal / interrupÃ§Ã£o
	DDRD = 0x00;
 680:	1a b8       	out	0x0a, r1	; 10
	PORTD = 0xff;
 682:	8f ef       	ldi	r24, 0xFF	; 255
 684:	8b b9       	out	0x0b, r24	; 11
	DDRC = 0b11111111;
 686:	87 b9       	out	0x07, r24	; 7
	DDRB = 0b11111111;
 688:	84 b9       	out	0x04, r24	; 4
	
	EICRA = 0b00000011;
 68a:	83 e0       	ldi	r24, 0x03	; 3
 68c:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
	EIMSK = 0b00000011;
 690:	8d bb       	out	0x1d, r24	; 29
	sei();
 692:	78 94       	sei

	// Timer
	TCCR0A = 0b00000010;
 694:	92 e0       	ldi	r25, 0x02	; 2
 696:	94 bd       	out	0x24, r25	; 36
	TCCR0B = 0b00000011; // TC0 com prescaler=64
 698:	85 bd       	out	0x25, r24	; 37
	OCR0A = 249; // ajusta o comparador do TC0 contar atÃ© 249
 69a:	89 ef       	ldi	r24, 0xF9	; 249
 69c:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = 0b00000010; // Habilita a interrupcao na igualdade com OCR0A, sendo a cada 1ms = (64*(249+1)/16Mhz
 69e:	90 93 6e 00 	sts	0x006E, r25	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	DDRD = (1<<6);
 6a2:	80 e4       	ldi	r24, 0x40	; 64
 6a4:	8a b9       	out	0x0a, r24	; 10
	
	nokia_lcd_init(); //Inicia o LCD
 6a6:	0e 94 b7 03 	call	0x76e	; 0x76e <nokia_lcd_init>
	nokia_lcd_clear(); //Limpa o LCD
 6aa:	0e 94 0f 04 	call	0x81e	; 0x81e <nokia_lcd_clear>
	nokia_lcd_render();
 6ae:	0e 94 ed 04 	call	0x9da	; 0x9da <nokia_lcd_render>
	
	
	while (1)
	{
		
		if(start_count==0)
 6b2:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__data_end>
 6b6:	81 11       	cpse	r24, r1
 6b8:	0c c0       	rjmp	.+24     	; 0x6d2 <main+0x5a>
		{
			
			if(start_end==0)
 6ba:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <start_end>
 6be:	81 11       	cpse	r24, r1
 6c0:	03 c0       	rjmp	.+6      	; 0x6c8 <main+0x50>
			{
				game_running_display_init();
 6c2:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <game_running_display_init>
 6c6:	f5 cf       	rjmp	.-22     	; 0x6b2 <main+0x3a>
			}
				else if(start_end==1)
 6c8:	81 30       	cpi	r24, 0x01	; 1
 6ca:	99 f7       	brne	.-26     	; 0x6b2 <main+0x3a>
			{
				game_running_display_config();
 6cc:	0e 94 a4 01 	call	0x348	; 0x348 <game_running_display_config>
 6d0:	f0 cf       	rjmp	.-32     	; 0x6b2 <main+0x3a>
			}
		}else if(start_count==1)
 6d2:	81 30       	cpi	r24, 0x01	; 1
 6d4:	29 f4       	brne	.+10     	; 0x6e0 <main+0x68>
		{
			start_count=game_running_display_transit_start();
 6d6:	0e 94 f6 01 	call	0x3ec	; 0x3ec <game_running_display_transit_start>
 6da:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end>
 6de:	e9 cf       	rjmp	.-46     	; 0x6b2 <main+0x3a>
		}else if(start_count==2)
 6e0:	82 30       	cpi	r24, 0x02	; 2
 6e2:	29 f4       	brne	.+10     	; 0x6ee <main+0x76>
		{
			game_running_display_countdwown(contador);
 6e4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 6e8:	0e 94 cd 01 	call	0x39a	; 0x39a <game_running_display_countdwown>
 6ec:	e2 cf       	rjmp	.-60     	; 0x6b2 <main+0x3a>
			
		}else if(start_count==3)
 6ee:	83 30       	cpi	r24, 0x03	; 3
 6f0:	01 f7       	brne	.-64     	; 0x6b2 <main+0x3a>
		{	
		start_count=game_running_display_game_over();
 6f2:	0e 94 50 02 	call	0x4a0	; 0x4a0 <game_running_display_game_over>
 6f6:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end>
		start_end=0;
 6fa:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <start_end>
 6fe:	d9 cf       	rjmp	.-78     	; 0x6b2 <main+0x3a>

00000700 <write>:
 700:	95 b1       	in	r25, 0x05	; 5
 702:	9d 7f       	andi	r25, 0xFD	; 253
 704:	95 b9       	out	0x05, r25	; 5
 706:	66 23       	and	r22, r22
 708:	29 f0       	breq	.+10     	; 0x714 <write+0x14>
 70a:	95 b1       	in	r25, 0x05	; 5
 70c:	98 60       	ori	r25, 0x08	; 8
 70e:	95 b9       	out	0x05, r25	; 5
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	1f c0       	rjmp	.+62     	; 0x752 <write+0x52>
 714:	95 b1       	in	r25, 0x05	; 5
 716:	97 7f       	andi	r25, 0xF7	; 247
 718:	95 b9       	out	0x05, r25	; 5
 71a:	fa cf       	rjmp	.-12     	; 0x710 <write+0x10>
 71c:	47 e0       	ldi	r20, 0x07	; 7
 71e:	50 e0       	ldi	r21, 0x00	; 0
 720:	49 1b       	sub	r20, r25
 722:	51 09       	sbc	r21, r1
 724:	28 2f       	mov	r18, r24
 726:	30 e0       	ldi	r19, 0x00	; 0
 728:	02 c0       	rjmp	.+4      	; 0x72e <write+0x2e>
 72a:	35 95       	asr	r19
 72c:	27 95       	ror	r18
 72e:	4a 95       	dec	r20
 730:	e2 f7       	brpl	.-8      	; 0x72a <write+0x2a>
 732:	20 ff       	sbrs	r18, 0
 734:	04 c0       	rjmp	.+8      	; 0x73e <write+0x3e>
 736:	25 b1       	in	r18, 0x05	; 5
 738:	20 61       	ori	r18, 0x10	; 16
 73a:	25 b9       	out	0x05, r18	; 5
 73c:	03 c0       	rjmp	.+6      	; 0x744 <write+0x44>
 73e:	25 b1       	in	r18, 0x05	; 5
 740:	2f 7e       	andi	r18, 0xEF	; 239
 742:	25 b9       	out	0x05, r18	; 5
 744:	25 b1       	in	r18, 0x05	; 5
 746:	20 62       	ori	r18, 0x20	; 32
 748:	25 b9       	out	0x05, r18	; 5
 74a:	25 b1       	in	r18, 0x05	; 5
 74c:	2f 7d       	andi	r18, 0xDF	; 223
 74e:	25 b9       	out	0x05, r18	; 5
 750:	9f 5f       	subi	r25, 0xFF	; 255
 752:	98 30       	cpi	r25, 0x08	; 8
 754:	18 f3       	brcs	.-58     	; 0x71c <write+0x1c>
 756:	85 b1       	in	r24, 0x05	; 5
 758:	82 60       	ori	r24, 0x02	; 2
 75a:	85 b9       	out	0x05, r24	; 5
 75c:	08 95       	ret

0000075e <write_cmd>:
 75e:	60 e0       	ldi	r22, 0x00	; 0
 760:	0e 94 80 03 	call	0x700	; 0x700 <write>
 764:	08 95       	ret

00000766 <write_data>:
 766:	61 e0       	ldi	r22, 0x01	; 1
 768:	0e 94 80 03 	call	0x700	; 0x700 <write>
 76c:	08 95       	ret

0000076e <nokia_lcd_init>:
 76e:	cf 93       	push	r28
 770:	df 93       	push	r29
 772:	84 b1       	in	r24, 0x04	; 4
 774:	82 60       	ori	r24, 0x02	; 2
 776:	84 b9       	out	0x04, r24	; 4
 778:	84 b1       	in	r24, 0x04	; 4
 77a:	84 60       	ori	r24, 0x04	; 4
 77c:	84 b9       	out	0x04, r24	; 4
 77e:	84 b1       	in	r24, 0x04	; 4
 780:	88 60       	ori	r24, 0x08	; 8
 782:	84 b9       	out	0x04, r24	; 4
 784:	84 b1       	in	r24, 0x04	; 4
 786:	80 61       	ori	r24, 0x10	; 16
 788:	84 b9       	out	0x04, r24	; 4
 78a:	84 b1       	in	r24, 0x04	; 4
 78c:	80 62       	ori	r24, 0x20	; 32
 78e:	84 b9       	out	0x04, r24	; 4
 790:	85 b1       	in	r24, 0x05	; 5
 792:	84 60       	ori	r24, 0x04	; 4
 794:	85 b9       	out	0x05, r24	; 5
 796:	85 b1       	in	r24, 0x05	; 5
 798:	82 60       	ori	r24, 0x02	; 2
 79a:	85 b9       	out	0x05, r24	; 5
 79c:	83 ec       	ldi	r24, 0xC3	; 195
 79e:	99 e0       	ldi	r25, 0x09	; 9
 7a0:	01 97       	sbiw	r24, 0x01	; 1
 7a2:	f1 f7       	brne	.-4      	; 0x7a0 <nokia_lcd_init+0x32>
 7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <nokia_lcd_init+0x38>
 7a6:	00 00       	nop
 7a8:	85 b1       	in	r24, 0x05	; 5
 7aa:	8b 7f       	andi	r24, 0xFB	; 251
 7ac:	85 b9       	out	0x05, r24	; 5
 7ae:	8b e5       	ldi	r24, 0x5B	; 91
 7b0:	94 e4       	ldi	r25, 0x44	; 68
 7b2:	01 97       	sbiw	r24, 0x01	; 1
 7b4:	f1 f7       	brne	.-4      	; 0x7b2 <nokia_lcd_init+0x44>
 7b6:	00 c0       	rjmp	.+0      	; 0x7b8 <nokia_lcd_init+0x4a>
 7b8:	00 00       	nop
 7ba:	85 b1       	in	r24, 0x05	; 5
 7bc:	84 60       	ori	r24, 0x04	; 4
 7be:	85 b9       	out	0x05, r24	; 5
 7c0:	85 b1       	in	r24, 0x05	; 5
 7c2:	8d 7f       	andi	r24, 0xFD	; 253
 7c4:	85 b9       	out	0x05, r24	; 5
 7c6:	81 e2       	ldi	r24, 0x21	; 33
 7c8:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7cc:	83 e1       	ldi	r24, 0x13	; 19
 7ce:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7d2:	86 e0       	ldi	r24, 0x06	; 6
 7d4:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7d8:	82 ec       	ldi	r24, 0xC2	; 194
 7da:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7de:	80 e2       	ldi	r24, 0x20	; 32
 7e0:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7e4:	89 e0       	ldi	r24, 0x09	; 9
 7e6:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7ea:	80 e8       	ldi	r24, 0x80	; 128
 7ec:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7f0:	80 e4       	ldi	r24, 0x40	; 64
 7f2:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 7f6:	c0 e0       	ldi	r28, 0x00	; 0
 7f8:	d0 e0       	ldi	r29, 0x00	; 0
 7fa:	04 c0       	rjmp	.+8      	; 0x804 <nokia_lcd_init+0x96>
 7fc:	80 e0       	ldi	r24, 0x00	; 0
 7fe:	0e 94 b3 03 	call	0x766	; 0x766 <write_data>
 802:	21 96       	adiw	r28, 0x01	; 1
 804:	c8 3f       	cpi	r28, 0xF8	; 248
 806:	91 e0       	ldi	r25, 0x01	; 1
 808:	d9 07       	cpc	r29, r25
 80a:	c0 f3       	brcs	.-16     	; 0x7fc <nokia_lcd_init+0x8e>
 80c:	88 e0       	ldi	r24, 0x08	; 8
 80e:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 812:	8c e0       	ldi	r24, 0x0C	; 12
 814:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 818:	df 91       	pop	r29
 81a:	cf 91       	pop	r28
 81c:	08 95       	ret

0000081e <nokia_lcd_clear>:
 81e:	80 e8       	ldi	r24, 0x80	; 128
 820:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 824:	80 e4       	ldi	r24, 0x40	; 64
 826:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 82a:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <nokia_lcd+0x1f8>
 82e:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <nokia_lcd+0x1f9>
 832:	80 e0       	ldi	r24, 0x00	; 0
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	05 c0       	rjmp	.+10     	; 0x842 <nokia_lcd_clear+0x24>
 838:	fc 01       	movw	r30, r24
 83a:	e7 59       	subi	r30, 0x97	; 151
 83c:	fe 4f       	sbci	r31, 0xFE	; 254
 83e:	10 82       	st	Z, r1
 840:	01 96       	adiw	r24, 0x01	; 1
 842:	88 3f       	cpi	r24, 0xF8	; 248
 844:	21 e0       	ldi	r18, 0x01	; 1
 846:	92 07       	cpc	r25, r18
 848:	b8 f3       	brcs	.-18     	; 0x838 <nokia_lcd_clear+0x1a>
 84a:	08 95       	ret

0000084c <nokia_lcd_set_pixel>:
 84c:	26 2f       	mov	r18, r22
 84e:	26 95       	lsr	r18
 850:	26 95       	lsr	r18
 852:	26 95       	lsr	r18
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	34 e5       	ldi	r19, 0x54	; 84
 858:	23 9f       	mul	r18, r19
 85a:	80 0d       	add	r24, r0
 85c:	91 1d       	adc	r25, r1
 85e:	11 24       	eor	r1, r1
 860:	44 23       	and	r20, r20
 862:	79 f0       	breq	.+30     	; 0x882 <nokia_lcd_set_pixel+0x36>
 864:	67 70       	andi	r22, 0x07	; 7
 866:	21 e0       	ldi	r18, 0x01	; 1
 868:	30 e0       	ldi	r19, 0x00	; 0
 86a:	02 c0       	rjmp	.+4      	; 0x870 <nokia_lcd_set_pixel+0x24>
 86c:	22 0f       	add	r18, r18
 86e:	33 1f       	adc	r19, r19
 870:	6a 95       	dec	r22
 872:	e2 f7       	brpl	.-8      	; 0x86c <nokia_lcd_set_pixel+0x20>
 874:	fc 01       	movw	r30, r24
 876:	e7 59       	subi	r30, 0x97	; 151
 878:	fe 4f       	sbci	r31, 0xFE	; 254
 87a:	80 81       	ld	r24, Z
 87c:	28 2b       	or	r18, r24
 87e:	20 83       	st	Z, r18
 880:	08 95       	ret
 882:	67 70       	andi	r22, 0x07	; 7
 884:	21 e0       	ldi	r18, 0x01	; 1
 886:	30 e0       	ldi	r19, 0x00	; 0
 888:	02 c0       	rjmp	.+4      	; 0x88e <nokia_lcd_set_pixel+0x42>
 88a:	22 0f       	add	r18, r18
 88c:	33 1f       	adc	r19, r19
 88e:	6a 95       	dec	r22
 890:	e2 f7       	brpl	.-8      	; 0x88a <nokia_lcd_set_pixel+0x3e>
 892:	fc 01       	movw	r30, r24
 894:	e7 59       	subi	r30, 0x97	; 151
 896:	fe 4f       	sbci	r31, 0xFE	; 254
 898:	20 95       	com	r18
 89a:	80 81       	ld	r24, Z
 89c:	28 23       	and	r18, r24
 89e:	20 83       	st	Z, r18
 8a0:	08 95       	ret

000008a2 <nokia_lcd_write_char>:
 8a2:	ef 92       	push	r14
 8a4:	ff 92       	push	r15
 8a6:	0f 93       	push	r16
 8a8:	1f 93       	push	r17
 8aa:	cf 93       	push	r28
 8ac:	df 93       	push	r29
 8ae:	e8 2e       	mov	r14, r24
 8b0:	f6 2e       	mov	r15, r22
 8b2:	00 e0       	ldi	r16, 0x00	; 0
 8b4:	45 c0       	rjmp	.+138    	; 0x940 <__stack+0x41>
 8b6:	2e 2d       	mov	r18, r14
 8b8:	30 e0       	ldi	r19, 0x00	; 0
 8ba:	20 52       	subi	r18, 0x20	; 32
 8bc:	31 09       	sbc	r19, r1
 8be:	80 2f       	mov	r24, r16
 8c0:	6f 2d       	mov	r22, r15
 8c2:	0e 94 06 05 	call	0xa0c	; 0xa0c <__udivmodqi4>
 8c6:	f9 01       	movw	r30, r18
 8c8:	ee 0f       	add	r30, r30
 8ca:	ff 1f       	adc	r31, r31
 8cc:	ee 0f       	add	r30, r30
 8ce:	ff 1f       	adc	r31, r31
 8d0:	e2 0f       	add	r30, r18
 8d2:	f3 1f       	adc	r31, r19
 8d4:	e8 0f       	add	r30, r24
 8d6:	f1 1d       	adc	r31, r1
 8d8:	e8 59       	subi	r30, 0x98	; 152
 8da:	ff 4f       	sbci	r31, 0xFF	; 255
 8dc:	e4 91       	lpm	r30, Z
 8de:	81 2f       	mov	r24, r17
 8e0:	0e 94 06 05 	call	0xa0c	; 0xa0c <__udivmodqi4>
 8e4:	f0 e0       	ldi	r31, 0x00	; 0
 8e6:	02 c0       	rjmp	.+4      	; 0x8ec <nokia_lcd_write_char+0x4a>
 8e8:	f5 95       	asr	r31
 8ea:	e7 95       	ror	r30
 8ec:	8a 95       	dec	r24
 8ee:	e2 f7       	brpl	.-8      	; 0x8e8 <nokia_lcd_write_char+0x46>
 8f0:	e0 ff       	sbrs	r30, 0
 8f2:	0a c0       	rjmp	.+20     	; 0x908 <__stack+0x9>
 8f4:	60 91 62 03 	lds	r22, 0x0362	; 0x800362 <nokia_lcd+0x1f9>
 8f8:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <nokia_lcd+0x1f8>
 8fc:	61 0f       	add	r22, r17
 8fe:	41 e0       	ldi	r20, 0x01	; 1
 900:	80 0f       	add	r24, r16
 902:	0e 94 26 04 	call	0x84c	; 0x84c <nokia_lcd_set_pixel>
 906:	09 c0       	rjmp	.+18     	; 0x91a <__stack+0x1b>
 908:	60 91 62 03 	lds	r22, 0x0362	; 0x800362 <nokia_lcd+0x1f9>
 90c:	80 91 61 03 	lds	r24, 0x0361	; 0x800361 <nokia_lcd+0x1f8>
 910:	61 0f       	add	r22, r17
 912:	40 e0       	ldi	r20, 0x00	; 0
 914:	80 0f       	add	r24, r16
 916:	0e 94 26 04 	call	0x84c	; 0x84c <nokia_lcd_set_pixel>
 91a:	1f 5f       	subi	r17, 0xFF	; 255
 91c:	01 c0       	rjmp	.+2      	; 0x920 <__stack+0x21>
 91e:	10 e0       	ldi	r17, 0x00	; 0
 920:	21 2f       	mov	r18, r17
 922:	30 e0       	ldi	r19, 0x00	; 0
 924:	ce 01       	movw	r24, r28
 926:	88 0f       	add	r24, r24
 928:	99 1f       	adc	r25, r25
 92a:	88 0f       	add	r24, r24
 92c:	99 1f       	adc	r25, r25
 92e:	88 0f       	add	r24, r24
 930:	99 1f       	adc	r25, r25
 932:	8c 1b       	sub	r24, r28
 934:	9d 0b       	sbc	r25, r29
 936:	28 17       	cp	r18, r24
 938:	39 07       	cpc	r19, r25
 93a:	0c f4       	brge	.+2      	; 0x93e <__stack+0x3f>
 93c:	bc cf       	rjmp	.-136    	; 0x8b6 <nokia_lcd_write_char+0x14>
 93e:	0f 5f       	subi	r16, 0xFF	; 255
 940:	20 2f       	mov	r18, r16
 942:	30 e0       	ldi	r19, 0x00	; 0
 944:	cf 2d       	mov	r28, r15
 946:	d0 e0       	ldi	r29, 0x00	; 0
 948:	ce 01       	movw	r24, r28
 94a:	88 0f       	add	r24, r24
 94c:	99 1f       	adc	r25, r25
 94e:	88 0f       	add	r24, r24
 950:	99 1f       	adc	r25, r25
 952:	8c 0f       	add	r24, r28
 954:	9d 1f       	adc	r25, r29
 956:	28 17       	cp	r18, r24
 958:	39 07       	cpc	r19, r25
 95a:	0c f3       	brlt	.-62     	; 0x91e <__stack+0x1f>
 95c:	e1 e6       	ldi	r30, 0x61	; 97
 95e:	f3 e0       	ldi	r31, 0x03	; 3
 960:	8f 2d       	mov	r24, r15
 962:	88 0f       	add	r24, r24
 964:	88 0f       	add	r24, r24
 966:	8f 0d       	add	r24, r15
 968:	90 81       	ld	r25, Z
 96a:	89 0f       	add	r24, r25
 96c:	8f 5f       	subi	r24, 0xFF	; 255
 96e:	80 83       	st	Z, r24
 970:	84 35       	cpi	r24, 0x54	; 84
 972:	70 f0       	brcs	.+28     	; 0x990 <__stack+0x91>
 974:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <nokia_lcd+0x1f8>
 978:	e2 e6       	ldi	r30, 0x62	; 98
 97a:	f3 e0       	ldi	r31, 0x03	; 3
 97c:	8f 2d       	mov	r24, r15
 97e:	88 0f       	add	r24, r24
 980:	88 0f       	add	r24, r24
 982:	88 0f       	add	r24, r24
 984:	98 2f       	mov	r25, r24
 986:	9f 19       	sub	r25, r15
 988:	80 81       	ld	r24, Z
 98a:	89 0f       	add	r24, r25
 98c:	8f 5f       	subi	r24, 0xFF	; 255
 98e:	80 83       	st	Z, r24
 990:	80 91 62 03 	lds	r24, 0x0362	; 0x800362 <nokia_lcd+0x1f9>
 994:	80 33       	cpi	r24, 0x30	; 48
 996:	20 f0       	brcs	.+8      	; 0x9a0 <__stack+0xa1>
 998:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <nokia_lcd+0x1f8>
 99c:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <nokia_lcd+0x1f9>
 9a0:	df 91       	pop	r29
 9a2:	cf 91       	pop	r28
 9a4:	1f 91       	pop	r17
 9a6:	0f 91       	pop	r16
 9a8:	ff 90       	pop	r15
 9aa:	ef 90       	pop	r14
 9ac:	08 95       	ret

000009ae <nokia_lcd_write_string>:
 9ae:	1f 93       	push	r17
 9b0:	cf 93       	push	r28
 9b2:	df 93       	push	r29
 9b4:	ec 01       	movw	r28, r24
 9b6:	16 2f       	mov	r17, r22
 9b8:	04 c0       	rjmp	.+8      	; 0x9c2 <nokia_lcd_write_string+0x14>
 9ba:	21 96       	adiw	r28, 0x01	; 1
 9bc:	61 2f       	mov	r22, r17
 9be:	0e 94 51 04 	call	0x8a2	; 0x8a2 <nokia_lcd_write_char>
 9c2:	88 81       	ld	r24, Y
 9c4:	81 11       	cpse	r24, r1
 9c6:	f9 cf       	rjmp	.-14     	; 0x9ba <nokia_lcd_write_string+0xc>
 9c8:	df 91       	pop	r29
 9ca:	cf 91       	pop	r28
 9cc:	1f 91       	pop	r17
 9ce:	08 95       	ret

000009d0 <nokia_lcd_set_cursor>:
 9d0:	80 93 61 03 	sts	0x0361, r24	; 0x800361 <nokia_lcd+0x1f8>
 9d4:	60 93 62 03 	sts	0x0362, r22	; 0x800362 <nokia_lcd+0x1f9>
 9d8:	08 95       	ret

000009da <nokia_lcd_render>:
 9da:	cf 93       	push	r28
 9dc:	df 93       	push	r29
 9de:	80 e8       	ldi	r24, 0x80	; 128
 9e0:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 9e4:	80 e4       	ldi	r24, 0x40	; 64
 9e6:	0e 94 af 03 	call	0x75e	; 0x75e <write_cmd>
 9ea:	c0 e0       	ldi	r28, 0x00	; 0
 9ec:	d0 e0       	ldi	r29, 0x00	; 0
 9ee:	07 c0       	rjmp	.+14     	; 0x9fe <nokia_lcd_render+0x24>
 9f0:	fe 01       	movw	r30, r28
 9f2:	e7 59       	subi	r30, 0x97	; 151
 9f4:	fe 4f       	sbci	r31, 0xFE	; 254
 9f6:	80 81       	ld	r24, Z
 9f8:	0e 94 b3 03 	call	0x766	; 0x766 <write_data>
 9fc:	21 96       	adiw	r28, 0x01	; 1
 9fe:	c8 3f       	cpi	r28, 0xF8	; 248
 a00:	81 e0       	ldi	r24, 0x01	; 1
 a02:	d8 07       	cpc	r29, r24
 a04:	a8 f3       	brcs	.-22     	; 0x9f0 <nokia_lcd_render+0x16>
 a06:	df 91       	pop	r29
 a08:	cf 91       	pop	r28
 a0a:	08 95       	ret

00000a0c <__udivmodqi4>:
 a0c:	99 1b       	sub	r25, r25
 a0e:	79 e0       	ldi	r23, 0x09	; 9
 a10:	04 c0       	rjmp	.+8      	; 0xa1a <__udivmodqi4_ep>

00000a12 <__udivmodqi4_loop>:
 a12:	99 1f       	adc	r25, r25
 a14:	96 17       	cp	r25, r22
 a16:	08 f0       	brcs	.+2      	; 0xa1a <__udivmodqi4_ep>
 a18:	96 1b       	sub	r25, r22

00000a1a <__udivmodqi4_ep>:
 a1a:	88 1f       	adc	r24, r24
 a1c:	7a 95       	dec	r23
 a1e:	c9 f7       	brne	.-14     	; 0xa12 <__udivmodqi4_loop>
 a20:	80 95       	com	r24
 a22:	08 95       	ret

00000a24 <__umulhisi3>:
 a24:	a2 9f       	mul	r26, r18
 a26:	b0 01       	movw	r22, r0
 a28:	b3 9f       	mul	r27, r19
 a2a:	c0 01       	movw	r24, r0
 a2c:	a3 9f       	mul	r26, r19
 a2e:	70 0d       	add	r23, r0
 a30:	81 1d       	adc	r24, r1
 a32:	11 24       	eor	r1, r1
 a34:	91 1d       	adc	r25, r1
 a36:	b2 9f       	mul	r27, r18
 a38:	70 0d       	add	r23, r0
 a3a:	81 1d       	adc	r24, r1
 a3c:	11 24       	eor	r1, r1
 a3e:	91 1d       	adc	r25, r1
 a40:	08 95       	ret

00000a42 <_exit>:
 a42:	f8 94       	cli

00000a44 <__stop_program>:
 a44:	ff cf       	rjmp	.-2      	; 0xa44 <__stop_program>
